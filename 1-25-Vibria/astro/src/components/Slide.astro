---
import { getSlidesInfo } from "@wp/index.js";
const { lang } = Astro.params;

const slides = await getSlidesInfo(lang);
---

<div id="slide-container" class="relative w-full min-h-[700px] overflow-hidden">
  <div id="slides" class="w-full h-full">
    {
      slides.map((slide, index) => (
        <div
          class={`slide absolute top-76 left-0 w-full min-h-[700px] flex justify-start transition-opacity duration-700 md:pl-16 xl:pl-32 ${index === 0 ? "opacity-100" : "opacity-0"}`}
          data-index={index}
          style={`background: linear-gradient(rgba(5, 130, 121, 0.6), rgba(5, 130, 121, 0.6)), url('${slide.imageUrl}') center/cover no-repeat;`}
        >
          <div class=" flex flex-col gap-3 items-start justify-center px-4 md:w-2/5">
            
            <h1 class="h1" style="text-shadow: 1.2px 1.2px 0px #FFC721;">
              {slide.title}
            </h1>
            <h3 class="h3 font-800 md:text-[22px]">{slide.subtitle}</h3>
            <p class="p md:text-[17px]">{slide.text}</p>
            <a href={slide.buttonUrl} class="btn">
              {slide.buttonText}
            </a>
          </div>
        </div>
      ))
    }
  </div>

  <!-- Botones de navegación -->
  <div
    id="slide-buttons"
    class="relative z-20 flex flex-row justify-center items-center gap-4"
    style="top: 600px;"
  >
    {
      slides.map((_, index) => (
        <button
          class={`slide-button rounded-full transition-all ${
            index === 0
              ? "bg-yellow outline outline-2 outline-offset-3 outline-secondary  w-2 h-2"
              : "bg-white w-3 h-3"
          }`}
          data-index={index}
        />
      ))
    }
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    let currentSlide = 0;
    const slides = document.querySelectorAll(".slide");
    const buttons = document.querySelectorAll(".slide-button");

    function showSlide(index) {
      slides.forEach((slide, i) => {
        slide.style.opacity = i === index ? "1" : "0";
        slide.style.zIndex = i === index ? "1" : "0";
        slide.style.pointerEvents = i === index ? "auto" : "none";
      });

      buttons.forEach((button, i) => {
        button.classList.toggle("bg-yellow", i === index);
        button.classList.toggle("outline", i === index);
        button.classList.toggle("outline-2", i === index);
        button.classList.toggle("outline-offset-4", i === index);
        button.classList.toggle("outline-secondary", i === index);
        button.classList.toggle("w-2", i === index);
        button.classList.toggle("h-2", i === index);
        button.classList.toggle("bg-white", i !== index);
        button.classList.toggle("w-3", i !== index);
        button.classList.toggle("h-3", i !== index);
      });

      currentSlide = index;
    }

    function goToNextSlide() {
      const nextSlide = (currentSlide + 1) % slides.length;
      showSlide(nextSlide);
    }

    function goToPrevSlide() {
      const prevSlide = (currentSlide - 1 + slides.length) % slides.length;
      showSlide(prevSlide);
    }

    // Cambiar automáticamente cada 5 segundos
    let autoSlideInterval = setInterval(goToNextSlide, 5000);

    // Botones manuales
    buttons.forEach((button) => {
      button.addEventListener("click", () => {
        const index = parseInt(button.dataset.index || "0");
        showSlide(index);
        clearInterval(autoSlideInterval); // reiniciar si tocamos
        autoSlideInterval = setInterval(goToNextSlide, 5000);
      });
    });

    // SWIPE: Detectar arrastre horizontal
    let touchStartX = 0;
    let touchEndX = 0;

    const slideContainer = document.querySelector("#slide-container");

    slideContainer.addEventListener("touchstart", (e) => {
      touchStartX = e.changedTouches[0].screenX;
    });

    slideContainer.addEventListener("touchend", (e) => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipeGesture();
    });

    function handleSwipeGesture() {
      const distance = touchEndX - touchStartX;
      const threshold = 50; // mínimo para considerar swipe

      if (Math.abs(distance) > threshold) {
        if (distance < 0) {
          goToNextSlide(); // swipe a la izquierda → siguiente
        } else {
          goToPrevSlide(); // swipe a la derecha → anterior
        }
        clearInterval(autoSlideInterval);
        autoSlideInterval = setInterval(goToNextSlide, 5000);
      }
    }

    showSlide(0);
  });
</script>

